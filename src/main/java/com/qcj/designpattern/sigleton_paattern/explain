http://www.runoob.com/design-pattern/singleton-pattern.html

单例模式
    单例模式（Singleton Pattern）是 Java 中最简单的设计模式之一。
        这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。
        这种模式涉及到一个单一的类，该类负责创建自己的对象，同时确保只有单个对象被创建。
        这个类提供了一种访问其唯一的对象的方式，可以直接访问，不需要实例化该类的对象。

    主要解决：
        一个全局使用的类频繁地创建与销毁。

    何时使用：
        当您想控制实例数目，节省系统资源的时候。

    如何解决：
        判断系统是否已经有这个单例，如果有则返回，如果没有则创建。

    关键代码：
        构造函数是私有的。

经验之谈：
    一般情况下，不建议使用第 1 种和第 2 种懒汉方式，建议使用第 3 种饿汉方式。
    只有在要明确实现 lazy loading 效果时，才会使用第 5 种登记方式。
    如果涉及到反序列化创建对象时，可以尝试使用第 6 种枚举方式。
    如果有其他特殊的需求，可以考虑使用第 4 种双检锁方式。